#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
"""

import sqlite3
import os

def test_database():
    """ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    print("๐ ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช...")
    
    try:
        # ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช
        db_name = "test_store.db"
        
        # ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฅุฐุง ูุงูุช ููุฌูุฏุฉ
        if os.path.exists(db_name):
            os.remove(db_name)
            print("โ ุชู ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุฏููุฉ")
        
        # ุฅูุดุงุก ุงูุงุชุตุงู
        conn = sqlite3.connect(db_name)
        cursor = conn.cursor()
        print("โ ุชู ุฅูุดุงุก ุงูุงุชุตุงู")
        
        # ุฅูุดุงุก ุงูุฌุฏูู
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS products (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                cost_price REAL NOT NULL,
                sell_price REAL NOT NULL,
                quantity INTEGER NOT NULL
            )
        ''')
        print("โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูููุชุฌุงุช")
        
        # ุฅุถุงูุฉ ููุชุฌ ุชุฌุฑูุจู
        cursor.execute(
            "INSERT INTO products (name, cost_price, sell_price, quantity) VALUES (?, ?, ?, ?)",
            ("ููุชุฌ ุชุฌุฑูุจู", 10.0, 15.0, 100)
        )
        conn.commit()
        print("โ ุชู ุฅุถุงูุฉ ููุชุฌ ุชุฌุฑูุจู")
        
        # ูุฑุงุกุฉ ุงูููุชุฌุงุช
        cursor.execute("SELECT * FROM products")
        products = cursor.fetchall()
        print(f"โ ุชู ุฌูุจ {len(products)} ููุชุฌ")
        
        for product in products:
            print(f"   - {product}")
        
        conn.close()
        print("โ ุชู ุฅุบูุงู ุงูุงุชุตุงู")
        
        # ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ
        os.remove(db_name)
        print("โ ุชู ุญุฐู ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ")
        
        print("๐ ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุฌุญ!")
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

def test_imports():
    """ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏุงุช"""
    print("๐ ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏุงุช...")
    
    try:
        import http.server
        print("โ http.server")
        
        import socketserver
        print("โ socketserver")
        
        import webbrowser
        print("โ webbrowser")
        
        import threading
        print("โ threading")
        
        import time
        print("โ time")
        
        import json
        print("โ json")
        
        import urllib.parse
        print("โ urllib.parse")
        
        import sqlite3
        print("โ sqlite3")
        
        import os
        print("โ os")
        
        print("๐ ุฌููุน ุงูุงุณุชูุฑุงุฏุงุช ูุฌุญุช!")
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุณุชูุฑุงุฏุงุช: {e}")
        return False

if __name__ == "__main__":
    print("๐ ุจุฏุก ุงูุงุฎุชุจุงุฑุงุช...")
    
    # ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏุงุช
    imports_ok = test_imports()
    print()
    
    # ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    db_ok = test_database()
    print()
    
    if imports_ok and db_ok:
        print("๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช! ุงููุธุงู ุฌุงูุฒ ููุนูู.")
    else:
        print("โ ุจุนุถ ุงูุงุฎุชุจุงุฑุงุช ูุดูุช. ูุฑุฌู ูุฑุงุฌุนุฉ ุงูุฃุฎุทุงุก.")
